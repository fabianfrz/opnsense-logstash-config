filter {
  if ![@metadata][skip_ls_filter] {
    ## Events with missing [#source] get "unknown" set as [#source] which
    ## causes them to get pushed into an "unknown" index.
    if ![#source] {
      mutate {
        add_field => {
          "#source" => "unknown"
          "[@metadata][index_interval]" => "%{+YYYY}"
        }
      }
    }

    ## If the [@timestamp] (which is extracted from the original log at this point)
    ## is older than 2 years we force the "[@metadata][index_interval]" => "%{+YYYY}".
    ## This prevents index flooding/creation when very old logs end up in the pipeline somehow.
    if ![@metadata][#archive_import] {
      ruby {
          code => "
            begin
              ## As date calculations can be difficult to gasp we use as simple
              ## example using years only here to proof the correctness of the
              ## real calculation below:
              ##       (2017    -   2013).abs =  4;               4 > 2 == true
              ##       (2017    -   2022).abs =  5;               5 > 2 == true
              if (Time.now.to_f - event.get('@timestamp').to_f).abs > (60 * 60 * 24 * 360 * 2)
                event.set('[@metadata][index_interval_yearly]', true)
              end
              rescue Exception => e
                event.set('tags', '_rubyefailure: ' + e.message)
            end
          "
      }
    }

    ## By default events will end up in the index or file specified by %{#source} and the index will rotate daily.
    ## Note that %{+YYYY.MM.dd} is constructed using the [@timestamp] field.
    ## %{+YYYY.MM.dd} is the Logstash default and shall also be the default for
    ## this config. ISO 8601 would be preferred when starting over.
    if ![@metadata][index_prefix] {
      mutate {
        add_field => {
          "[@metadata][index_prefix]" => "%{#source}"
        }
      }
    }
    if [@metadata][index_interval_yearly] {
      mutate {
        replace => {
          "[@metadata][index_interval]" => "%{+YYYY}"
        }
      }
    } else if ![@metadata][index_interval] {
      mutate {
        add_field => {
          "[@metadata][index_interval]" => "%{+YYYY-MM}"
        }
      }
    }
  }
}
